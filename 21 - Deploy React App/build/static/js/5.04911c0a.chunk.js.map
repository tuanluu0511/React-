{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","loadedData","data","error","status","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,mCAceA,IAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMF,UAAU,MAAMG,GAAG,aAAzB,8B,mBCNNC,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wHCkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIP,UAAWC,IAAQO,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMC,GAAIJ,EAAMI,GAAIX,UAAU,MAAMG,GAAE,kBAAaI,EAAMI,IAAzD,iC,iBC8BSC,EA3BG,SAACL,GACjB,IAXkBM,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAGXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAjBYV,EAiBcN,EAAMM,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAkBxC,OACE,eAAC,WAAD,WACE,qBAAKX,UAAWC,IAAQ0B,QAAxB,SACE,yBAAQC,QAPe,WAC3Bb,EAAQc,KAAK,CAAEC,SAAUb,EAASa,SAAUT,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAMvF,kBAA6CA,EAAqB,aAAe,iBAEnF,oBAAInB,UAAWC,IAAQ8B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAA0BtB,GAAIsB,EAAMtB,GAAID,OAAQuB,EAAMvB,OAAQD,KAAMwB,EAAMxB,MAA1DwB,EAAMtB,aCOjBuB,UAlCG,WAChB,MAAyDC,YAAQC,KAAc,GAAvEC,EAAR,EAAQA,YAAmBC,EAA3B,EAAqBC,KAAkBC,EAAvC,EAAuCA,MAAOC,EAA9C,EAA8CA,OAM9C,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXI,EAEA,qBAAKzC,UAAU,WAAf,SACE,cAAC2C,EAAA,EAAD,MAKS,UAAXF,EAEA,qBAAKzC,UAAU,mBAAf,SACE,4BAAIwC,MAKK,cAAXC,GAA4BH,GAAoC,IAAtBA,EAAWM,OAQlD,cAAC,EAAD,CAAW/B,OAAQyB,IANtB,8BACE,cAACvC,EAAA,EAAD","file":"static/js/5.04911c0a.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2iz_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1PcnS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__1XsXx\",\"sorting\":\"QuoteList_sorting__3wzXO\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link id={props.id} className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({ pathname: location.pathname, search: `?sort=${isSortingAscending ? 'desc' : 'asc'}` });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem key={quote.id} id={quote.id} author={quote.author} text={quote.text} />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { getAllQuotes } from '../lib/api';\r\nimport useHttp from '../hooks/use-http';\r\n\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport { useEffect } from 'react';\r\n\r\nconst AllQuotes = () => {\r\n  const { sendRequest, data: loadedData, error, status } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'error') {\r\n    return (\r\n      <div className=\"centered focused\">\r\n        <p>{error}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'completed' && (!loadedData || loadedData.length === 0)) {\r\n    return (\r\n      <div>\r\n        <NoQuotesFound />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <QuoteList quotes={loadedData} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}