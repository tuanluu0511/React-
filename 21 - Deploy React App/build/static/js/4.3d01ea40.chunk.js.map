{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","HighlightedQuote","props","quote","text","author","NewCommentForm","commentTextRef","useRef","onAddedComment","useHttp","addComment","sendRequest","status","error","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComment","data","addedCommentHandler","useCallback","length","onClick","QuoteDetail","params","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","url"],"mappings":"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","file":"static/js/4.3d01ea40.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2iz_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__3v8Z-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__pYhhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3K4iI\",\"loading\":\"NewCommentForm_loading__2Qz7S\",\"control\":\"NewCommentForm_control__1xCAB\",\"actions\":\"NewCommentForm_actions__shAt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1EsXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__11Up3\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\n\nimport { useEffect } from 'react';\n\nimport { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { onAddedComment } = props;\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'loading' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useCallback, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport CommentsList from './CommentsList';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComment } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comment;\n\n  if (status === 'pending') {\n    comment = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComment && loadedComment.length > 0) {\n    comment = <CommentsList comments={loadedComment} />;\n  }\n\n  if (status === 'completed' && (loadedComment.length === 0 || !loadedComment)) {\n    comment = <p>No comment yet.</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler} />}\n\n      {comment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport { Fragment } from 'react';\r\n\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport Comments from '../components/comments/Comments';\r\nimport { useEffect } from 'react';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n\r\n  const { quoteId } = params;\r\n  const { sendRequest, data: loadedQuote, status, error } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'error') {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={`${match.path}/`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"sourceRoot":""}